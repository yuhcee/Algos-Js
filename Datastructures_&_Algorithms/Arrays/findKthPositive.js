/**
 * **1539. Kth Missing Positive Number**
 *
 * Given an array `arr` of positive integers sorted in a **strictly increasing order**, and an
 * integer `k`.
 *
 * Return *the `kth` **positive** integer that is **missing** from this array*.
 *
 * **Constraints:**
 *
 * - `1 <= arr.length <= 1000`
 * - `1 <= arr[i] <= 1000`
 * - `1 <= k <= 1000`
 * - `arr[i] < arr[j] for 1 <= i < j <= arr.length`
 *
 * @param {number[]} arr
 * @param {number} k
 * @return {number}
 */
const findKthPositive = function (arr, k) {
    let n = arr.length;
    let missingCount = 0; // number of missing integers found so far
    let lastMissing = 0; // last missing integer found

    for (let i = 0; i < n; i++) {
        // calculate the number of missing integers between arr[i] and lastMissing
        let diff = arr[i] - lastMissing - 1;

        if (diff > 0) {
            missingCount += diff;
            if (missingCount >= k) {
                // we found the kth missing integer
                return lastMissing + k - (missingCount - diff);
            }
        }
        // update lastMissing
        lastMissing = arr[i];
    }

    // if we get here, it means the kth missing integer is greater than arr[n-1]
    return arr[n - 1] + k - missingCount;
};

const arr = [2, 3, 4, 7, 11],
    k = 5;
// Output: 9
/* Explanation: The missing positive integers are [1,5,6,8,9,10,12,13,...]. The 5th missing positive integer is 9. */
console.log(findKthPositive(arr, k));

const arr1 = [1, 2, 3, 4],
    k1 = 2;
// Output: 6
/* Explanation: The missing positive integers are [5,6,7,...]. The 2nd missing positive integer is 6. */
console.log(findKthPositive(arr1, k1));
const arr2 = [
        1, 2, 5, 6, 9, 13, 14, 17, 19, 20, 21, 22, 24, 26, 27, 31, 38, 40, 42, 43, 45, 46, 47, 49, 50, 51, 53, 56, 57, 58, 65, 66, 67, 68, 70, 72, 76, 77, 78, 79, 82, 85, 89, 91, 93, 96, 97, 98, 99,
        100, 104, 105, 108, 109, 110, 111, 112, 113, 115, 116, 118, 121, 123, 125, 127, 129, 130, 131, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145, 146, 148, 150, 151, 152, 154, 159, 160,
        162, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 185, 186, 187, 188, 189, 190, 191, 195, 196, 198, 199, 201, 203, 207, 211, 213, 214, 217, 218, 219, 223, 226, 227, 228, 231, 234, 235,
        242, 244, 246, 247, 248, 249, 251, 259, 262, 264, 267, 269, 273, 275, 276, 277, 280, 281, 285, 286, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 305, 308, 309, 310, 312, 313,
        314, 315, 316, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 336, 339, 341, 342, 343, 344, 345, 347, 348, 351, 352, 354, 356, 357, 360, 364, 365, 369, 371, 373, 375, 376,
        377, 378, 379, 382, 383, 384, 388, 389, 392, 394, 395, 396, 397, 399, 401, 402, 403, 405, 408, 410, 412, 413, 415, 416, 421, 422, 423, 424, 425, 426, 431, 432, 434, 436, 438, 440, 441, 442,
        445, 446, 447, 450, 452, 457, 463, 464, 466, 468, 469, 470, 471, 472, 474, 477, 480, 481, 487, 488, 489, 490, 492, 493, 494, 496, 498, 499, 501, 502, 503, 504, 506, 509, 510, 511, 512, 513,
        514, 517, 518, 523, 524, 525, 526, 527, 531, 532, 533, 534, 537, 538, 540, 541, 542, 544, 545, 546, 550, 559, 560, 562, 569, 571, 572, 573, 575, 578, 583, 584, 585, 588, 589, 590, 593, 594,
        597, 599, 603, 604, 605, 606, 607, 608, 610, 612, 613, 614, 615, 617, 619, 620, 621, 623, 625, 626, 627, 628, 629, 630, 631, 633, 634, 637, 638, 641, 643, 646, 647, 648, 649, 651, 652, 654,
        656, 658, 659, 660, 661, 670, 672, 673, 676, 677, 678, 680, 681, 687, 688, 689, 690, 691, 694, 695, 696, 698, 699, 700, 701, 704, 705, 707, 708, 709, 711, 713, 716, 717, 718, 719, 721, 722,
        725, 726, 727, 728, 729, 730, 732, 733, 734, 740, 746, 750, 751, 753, 754, 756, 761, 763, 765, 772, 773, 777, 784, 791, 796, 800, 802, 804, 806, 807, 809, 811, 812, 813, 818, 819, 820, 822,
        824, 825, 827, 829, 830, 831, 832, 836, 837, 842, 847, 848, 851, 853, 854, 855, 856, 863, 864, 866, 867, 869, 870, 871, 878, 880, 883, 884, 886, 887, 888, 889, 891, 892, 894, 895, 896, 897,
        898, 899, 900, 901, 903, 904, 905, 908, 910, 914, 915, 917, 918, 919, 921, 925, 926, 927, 928, 931, 932, 933, 935, 938, 941, 942, 943, 946, 952, 953, 954, 955, 956, 957, 958, 959, 962, 964,
        967, 969, 970, 973, 976, 978, 984, 985, 986, 989, 991, 992, 993, 994, 995, 996, 998, 999, 1000,
    ],
    k2 = 533;
console.log(findKthPositive(arr2, k2));
